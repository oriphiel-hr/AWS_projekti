name: Frontend - Build & Deploy (Hostinger)

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "uslugar/frontend/**"
      - ".github/workflows/frontend-uslugar.yml"

permissions:
  id-token: write
  contents: read

env:
  FRONTEND_DIR: uslugar/frontend
  BUILD_CMD: npm ci && npm run build
  # Default candidates the detector will try (can leave DIST_DIR=dist if you want)
  DIST_DIR: dist
  SERVER_DIR: ${{ secrets.HOSTINGER_SERVER_DIR != '' && secrets.HOSTINGER_SERVER_DIR || 'public_html/' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure package-lock.json (frontend)
        run: |
          test -f "${{ env.FRONTEND_DIR }}/package-lock.json" || (
            cd "${{ env.FRONTEND_DIR }}" && npm i --package-lock-only
          )

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Show package.json scripts (debug)
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          node -e "console.log(require('./package.json').scripts)"

      - name: Build frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: $BUILD_CMD

      - name: List build artifacts (debug)
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          echo "Root files:" && ls -la
          echo "dist/:" && ls -la dist || true
          echo "build/:" && ls -la build || true
          echo "out/:" && ls -la out || true

      - name: Detect build output directory
        id: detect
        working-directory: ${{ env.FRONTEND_DIR }}
        shell: bash
        run: |
          set -euo pipefail
          name="$(node -e "console.log(require('./package.json').name || '')" || true)"
          candidates=()
          # 1) user-provided env
          candidates+=("${DIST_DIR}")
          # 2) common frameworks
          candidates+=("dist" "build" "out" "public")
          # 3) Angular variants
          [ -n "$name" ] && candidates+=("dist/$name")
          # 4) first subdir in dist/
          if [ -d dist ]; then
            first_sub="$(ls -d dist/* 2>/dev/null | head -n1 || true)"
            [ -n "$first_sub" ] && candidates+=("$first_sub")
          fi
          found=""
          for d in "${candidates[@]}"; do
            if [ -d "$d" ]; then
              # prefer directory that has an index.html (pure static)
              if [ -f "$d/index.html" ]; then found="$d"; break; fi
              # otherwise any non-empty dir
              if [ "$(find "$d" -type f | wc -l)" -gt 0 ]; then found="$d"; break; fi
            fi
          done
          if [ -z "$found" ]; then
            echo "❌ Nije pronađen build output (pokušano: ${candidates[*]})."
            echo "   Ako koristiš CRA postavi DIST_DIR=build; za Next export DIST_DIR=out."
            exit 1
          fi
          echo "✅ Detektiran build output: $found"
          echo "dir=$found" >> "$GITHUB_OUTPUT"

      - name: Deploy via FTPS to Hostinger (mirror & delete)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          password: ${{ secrets.HOSTINGER_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: ${{ env.FRONTEND_DIR }}/${{ steps.detect.outputs.dir }}/
          server-dir: ${{ env.SERVER_DIR }}
          dangerous-clean-slate: true
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store
