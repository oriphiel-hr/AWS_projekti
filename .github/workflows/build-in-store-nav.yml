name: Build in-store-nav

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'pre-pilot/in-store-nav/**'
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID || secrets.AWS_ACCOUNT_ID }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN || secrets.AWS_ROLE_ARN }}
  ECR_REGISTRY: ${{ (vars.AWS_ACCOUNT_ID || secrets.AWS_ACCOUNT_ID) }}.dkr.ecr.${{ (vars.AWS_REGION || secrets.AWS_REGION) }}.amazonaws.com
  ECR_REPO: in-store-nav
  CONTEXT: pre-pilot/in-store-nav

concurrency:
  group: in-store-nav-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}
          tags: |
            type=raw,value=${{ github.ref_name }}-${{ github.sha }}
            type=raw,value=sha-${{ github.sha }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Export image URI
        id: img
        run: |
          echo "IMAGE_URI=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ github.ref_name }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Echo image URI
        run: echo "Built image -> ${{ steps.img.outputs.IMAGE_URI }}"
